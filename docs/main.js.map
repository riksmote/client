{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/core.module.ts","./src/app/core/interceptor/error-dialog.interceptor.ts","./src/app/core/socket/main-socket.ts","./src/app/features/auth/auth.module.ts","./src/app/features/auth/guard/auth.guard.ts","./src/app/features/auth/interceptor/auth-token.interceptor.ts","./src/app/features/auth/pages/login-page/login-page.component.ts","./src/app/features/auth/pages/login-page/login-page.component.html","./src/app/features/auth/pages/register-page/register-page.component.ts","./src/app/features/auth/pages/register-page/register-page.component.html","./src/app/features/auth/provider/apple-login.provider.ts","./src/app/features/auth/service/auth.service.ts","./src/app/features/features.module.ts","./src/app/features/main/main.component.ts","./src/app/features/main/main.component.html","./src/app/features/messages/components/messages/messages.component.ts","./src/app/features/messages/components/messages/messages.component.html","./src/app/features/messages/messages.module.ts","./src/app/features/messages/pages/direct-message-page/direct-message-page.component.ts","./src/app/features/messages/pages/direct-message-page/direct-message-page.component.html","./src/app/features/messages/service/message.service.ts","./src/app/features/notification/components/push-notification/push-notification.component.ts","./src/app/features/notification/notification.module.ts","./src/app/features/notification/service/notification.service.ts","./src/app/features/room/components/join-room-dialog/join-room-dialog.component.ts","./src/app/features/room/components/join-room-dialog/join-room-dialog.component.html","./src/app/features/room/components/room-item/room-item.component.ts","./src/app/features/room/components/room-item/room-item.component.html","./src/app/features/room/components/upsert-room-dialog/upsert-room-dialog.component.ts","./src/app/features/room/components/upsert-room-dialog/upsert-room-dialog.component.html","./src/app/features/room/pages/room-page/room-page.component.ts","./src/app/features/room/pages/room-page/room-page.component.html","./src/app/features/room/pages/rooms-page/rooms-page.component.ts","./src/app/features/room/pages/rooms-page/rooms-page.component.html","./src/app/features/room/room.module.ts","./src/app/features/room/service/room.service.ts","./src/app/features/routes.ts","./src/app/features/user/pages/recover-change-password-page/recover-change-password-page.component.ts","./src/app/features/user/pages/recover-change-password-page/recover-change-password-page.component.html","./src/app/features/user/pages/recover-page/recover-page.component.ts","./src/app/features/user/pages/recover-page/recover-page.component.html","./src/app/features/user/pages/settings-page/settings-page.component.ts","./src/app/features/user/pages/settings-page/settings-page.component.html","./src/app/features/user/service/recover.service.ts","./src/app/features/user/service/subscription.service.ts","./src/app/features/user/service/user.service.ts","./src/app/features/user/user.module.ts","./src/app/shared/components/confirm-dialog/confirm-dialog.component.ts","./src/app/shared/components/confirm-dialog/confirm-dialog.component.html","./src/app/shared/components/error-dialog/error-dialog.component.ts","./src/app/shared/components/error-dialog/error-dialog.component.html","./src/app/shared/material/material.module.ts","./src/app/shared/services/sound.service.ts","./src/app/shared/shared.module.ts","./src/app/shared/utils/upsert-item.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport {\r\n  ErrorDialogInterceptor,\r\n  HttpError,\r\n} from './core/interceptor/error-dialog.interceptor';\r\nimport { MainSocket } from './core/socket/main-socket';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n  destroy$ = new Subject();\r\n\r\n  constructor(\r\n    private errorHandler: ErrorDialogInterceptor,\r\n    private socket: MainSocket,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.socket\r\n      .fromEvent<HttpError>('exception')\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(e => this.errorHandler.handleError(e));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n}\r\n","<router-outlet></router-outlet>\r\n\r\n<app-push-notification></app-push-notification>\r\n","import { MaterialModule } from './shared/material/material.module';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { FeaturesModule } from './features/features.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AuthTokenInterceptor } from './features/auth/interceptor/auth-token.interceptor';\r\nimport { ErrorDialogInterceptor } from './core/interceptor/error-dialog.interceptor';\r\nimport { CoreModule } from './core/core.module';\r\nimport { AuthService } from './features/auth/service/auth.service';\r\nimport { APP_BASE_HREF } from '@angular/common';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { SharedModule } from './shared/shared.module';\r\n\r\nconst initialize = (authService: AuthService) => async () => {\r\n  if (authService.getAccessToken()) {\r\n    try {\r\n      await authService.getProfile().toPromise();\r\n    } catch {}\r\n  }\r\n};\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    MaterialModule,\r\n    SharedModule,\r\n    FeaturesModule,\r\n    BrowserAnimationsModule,\r\n    CoreModule,\r\n    ServiceWorkerModule.register('ngsw-worker.js', {\r\n      enabled: true,\r\n      registrationStrategy: 'registerWhenStable:30000',\r\n    }),\r\n  ],\r\n  providers: [\r\n    { provide: APP_BASE_HREF, useValue: '/' },\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: initialize,\r\n      deps: [AuthService],\r\n      multi: true,\r\n    },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: AuthTokenInterceptor,\r\n      multi: true,\r\n    },\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: ErrorDialogInterceptor,\r\n      multi: true,\r\n    },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MainSocket } from './socket/main-socket';\r\nimport { ErrorDialogInterceptor } from './interceptor/error-dialog.interceptor';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  providers: [MainSocket, ErrorDialogInterceptor],\r\n})\r\nexport class CoreModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpErrorResponse,\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport {\r\n  ErrorDialogComponent,\r\n  ErrorDialogData,\r\n} from '../../shared/components/error-dialog/error-dialog.component';\r\nimport { AuthService } from 'src/app/features/auth/service/auth.service';\r\nimport { AuthTokenInterceptor } from '../../features/auth/interceptor/auth-token.interceptor';\r\n\r\nexport interface HttpError {\r\n  statusCode: number;\r\n  message: string;\r\n  error?: string;\r\n}\r\n\r\n@Injectable()\r\nexport class ErrorDialogInterceptor implements HttpInterceptor {\r\n  static skipHeader = 'errorDialog';\r\n\r\n  constructor(private dialog: MatDialog, private authService: AuthService) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<unknown>,\r\n    next: HttpHandler,\r\n  ): Observable<HttpEvent<unknown>> {\r\n    if (request.headers.has(ErrorDialogInterceptor.skipHeader)) {\r\n      return next.handle(request);\r\n    }\r\n\r\n    return next.handle(request).pipe(\r\n      tap(\r\n        () => {},\r\n        response => {\r\n          if (response instanceof HttpErrorResponse) {\r\n            if (\r\n              response.status === 401 &&\r\n              this.authService.getRefreshToken() &&\r\n              !request.headers.has(AuthTokenInterceptor.skipHeader)\r\n            ) {\r\n              return;\r\n            }\r\n\r\n            this.handleError(response.error);\r\n          }\r\n        },\r\n      ),\r\n    );\r\n  }\r\n\r\n  handleError(err: HttpError) {\r\n    this.dialog.open<ErrorDialogData>(ErrorDialogComponent, {\r\n      data: {\r\n        title: err.error || 'Error',\r\n        message: err.message,\r\n      },\r\n      width: '350px',\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { boundMethod } from 'autobind-decorator';\r\nimport { Socket } from 'ngx-socket-io';\r\nimport { mergeMap, take } from 'rxjs/operators';\r\nimport { AuthService } from 'src/app/features/auth/service/auth.service';\r\nimport { environment } from '../../../environments/environment';\r\n\r\nconst getOptions = (authService: AuthService) => ({\r\n  transportOptions: {\r\n    polling: {\r\n      extraHeaders: {\r\n        Authorization: `Bearer ${authService.getAccessToken()}`,\r\n      },\r\n    },\r\n  },\r\n  autoConnect: false,\r\n});\r\n\r\n@Injectable()\r\nexport class MainSocket extends Socket {\r\n  constructor(private authService: AuthService) {\r\n    super({\r\n      url: environment.socket,\r\n      options: getOptions(authService),\r\n    });\r\n\r\n    const io = this.ioSocket.io;\r\n    io.on('reconnect_attempt', this.updateAccessToken);\r\n\r\n    this.onConnect().subscribe(() => this.emit('user:subscribe'));\r\n\r\n    this.onDisconnect().subscribe(reason => {\r\n      if (reason !== 'io server disconnect') {\r\n        return;\r\n      }\r\n\r\n      this.authService\r\n        .loginWithRefreshToken()\r\n        .pipe(take(1))\r\n        .subscribe(() => this.connect());\r\n    });\r\n  }\r\n\r\n  connect() {\r\n    this.updateAccessToken();\r\n\r\n    super.connect();\r\n  }\r\n\r\n  onConnect() {\r\n    return this.fromEvent('connect');\r\n  }\r\n\r\n  onDisconnect() {\r\n    return this.fromEvent<string>('disconnect');\r\n  }\r\n\r\n  @boundMethod\r\n  updateAccessToken() {\r\n    Object.assign(this.ioSocket?.io?.opts || {}, getOptions(this.authService));\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n  FacebookLoginProvider,\r\n  GoogleLoginProvider,\r\n  SocialAuthServiceConfig,\r\n  SocialLoginModule,\r\n} from 'angularx-social-login';\r\nimport { environment } from 'src/environments/environment';\r\nimport { AppleLoginProvider } from './provider/apple-login.provider';\r\nimport { MaterialModule } from '../../shared/material/material.module';\r\nimport { RegisterPageComponent } from './pages/register-page/register-page.component';\r\nimport { LoginPageComponent } from './pages/login-page/login-page.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../../shared/shared.module';\r\n\r\nconst apps = environment.apps;\r\n\r\n@NgModule({\r\n  declarations: [RegisterPageComponent, LoginPageComponent],\r\n  providers: [\r\n    {\r\n      provide: 'SocialAuthServiceConfig',\r\n      useValue: {\r\n        autoLogin: false,\r\n        providers: [\r\n          {\r\n            id: GoogleLoginProvider.PROVIDER_ID,\r\n            provider: new GoogleLoginProvider(apps.google),\r\n          },\r\n          {\r\n            id: FacebookLoginProvider.PROVIDER_ID,\r\n            provider: new FacebookLoginProvider(apps.facebook),\r\n          },\r\n          {\r\n            id: AppleLoginProvider.PROVIDER_ID,\r\n            provider: new AppleLoginProvider(apps.apple),\r\n          },\r\n        ],\r\n      } as SocialAuthServiceConfig,\r\n    },\r\n  ],\r\n  imports: [CommonModule, SocialLoginModule, SharedModule],\r\n  exports: [SocialLoginModule, RegisterPageComponent, LoginPageComponent],\r\n})\r\nexport class AuthModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  Router,\r\n} from '@angular/router';\r\nimport { AuthService } from '../service/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private router: Router, private authService: AuthService) {}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot,\r\n  ): boolean {\r\n    const { redirect, requireAuth } = next.data;\r\n\r\n    const { isAuthenticated } = this.authService;\r\n\r\n    const isAuthRequired = requireAuth == null || requireAuth;\r\n\r\n    const isAccessAllowed =\r\n      (isAuthRequired && isAuthenticated) ||\r\n      (!isAuthRequired && !isAuthenticated);\r\n\r\n    if (!isAccessAllowed) {\r\n      if (requireAuth == null || requireAuth) {\r\n        this.authService.setLoginCallbackUrl(state.url);\r\n      }\r\n\r\n      if (redirect) {\r\n        if (redirect instanceof Array) {\r\n          this.router.navigate([...redirect]);\r\n        } else {\r\n          this.router.navigate([redirect]);\r\n        }\r\n\r\n        return false;\r\n      }\r\n\r\n      if (this.router.routerState.snapshot.url === '') {\r\n        this.router.navigate(isAuthRequired ? ['/login'] : ['/']);\r\n\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return isAccessAllowed;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpErrorResponse,\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { tap, take, mergeMap, catchError } from 'rxjs/operators';\r\nimport { AuthService } from '../service/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthTokenInterceptor implements HttpInterceptor {\r\n  static skipHeader = 'skipTokenInterceptor';\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<unknown>,\r\n    next: HttpHandler,\r\n  ): Observable<HttpEvent<unknown>> {\r\n    request = this.handleRequest(request);\r\n\r\n    if (request.headers.has(AuthTokenInterceptor.skipHeader)) {\r\n      return next.handle(request);\r\n    }\r\n\r\n    return next.handle(request).pipe(\r\n      catchError(response => {\r\n        if (response instanceof HttpErrorResponse && response.status === 401) {\r\n          if (this.authService.getRefreshToken()) {\r\n            return this.authService.loginWithRefreshToken().pipe(\r\n              take(1),\r\n              tap(\r\n                () => {},\r\n                () => this.authService.logout(),\r\n              ),\r\n              mergeMap(() =>\r\n                next.handle(this.skipRequest(request)).pipe(\r\n                  tap(\r\n                    () => {},\r\n                    () => this.authService.logout(),\r\n                  ),\r\n                ),\r\n              ),\r\n            );\r\n          }\r\n\r\n          this.authService.logout();\r\n        }\r\n\r\n        return throwError(response);\r\n      }),\r\n    );\r\n  }\r\n\r\n  private skipRequest(request: HttpRequest<unknown>) {\r\n    request = request.clone({\r\n      headers: request.headers.set(AuthTokenInterceptor.skipHeader, 'true'),\r\n    });\r\n\r\n    return this.handleRequest(request);\r\n  }\r\n\r\n  private handleRequest(request: HttpRequest<unknown>) {\r\n    const token = this.authService.getAccessToken();\r\n\r\n    if (token) {\r\n      request = request.clone({\r\n        headers: request.headers.set('Authorization', `Bearer ${token}`),\r\n      });\r\n    }\r\n\r\n    return request;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { take } from 'rxjs/operators';\r\nimport { AuthService } from '../../service/auth.service';\r\n\r\n@Component({\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: ['./login-page.component.scss'],\r\n})\r\nexport class LoginPageComponent {\r\n  loginForm = this.formBuilder.group({\r\n    username: '',\r\n    password: '',\r\n  });\r\n\r\n  loading = false;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService,\r\n  ) {}\r\n\r\n  submit() {\r\n    if (this.loading) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n\r\n    const user = this.loginForm.value;\r\n\r\n    this.authService\r\n      .login(user)\r\n      .pipe(take(1))\r\n      .subscribe(\r\n        () => this.authService.redirectToCallback(),\r\n        () => {\r\n          this.loading = false;\r\n\r\n          this.loginForm.patchValue({\r\n            password: '',\r\n          });\r\n        },\r\n      );\r\n  }\r\n\r\n  async loginWithFacebook() {\r\n    if (this.loading) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n\r\n    try {\r\n      await this.authService.handleSocialLogin(() =>\r\n        this.authService.loginWithFacebook(),\r\n      );\r\n    } finally {\r\n      this.loading = false;\r\n    }\r\n  }\r\n\r\n  async loginWithApple() {\r\n    if (this.loading) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n\r\n    try {\r\n      await this.authService.handleSocialLogin(() =>\r\n        this.authService.loginWithApple(),\r\n      );\r\n    } finally {\r\n      this.loading = false;\r\n    }\r\n  }\r\n\r\n  async loginWithGoogle() {\r\n    if (this.loading) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n\r\n    try {\r\n      await this.authService.handleSocialLogin(() =>\r\n        this.authService.loginWithGoogle(),\r\n      );\r\n    } finally {\r\n      this.loading = false;\r\n    }\r\n  }\r\n}\r\n","<mat-spinner\r\n  class=\"position-absolute\"\r\n  diameter=\"30\"\r\n  *ngIf=\"loading\"\r\n></mat-spinner>\r\n<div class=\"container\">\r\n  <mat-card>\r\n    <h2 mat-card-title>Login</h2>\r\n    <p mat-card-subtitle>Sign into your account</p>\r\n\r\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"submit()\">\r\n      <mat-form-field class=\"full-width\">\r\n        <mat-label>Username</mat-label>\r\n        <input\r\n          type=\"text\"\r\n          formControlName=\"username\"\r\n          placeholder=\"Type in your username\"\r\n          matInput\r\n        />\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"full-width\">\r\n        <mat-label>Password</mat-label>\r\n        <input\r\n          type=\"password\"\r\n          formControlName=\"password\"\r\n          placeholder=\"Type in your password\"\r\n          matInput\r\n        />\r\n      </mat-form-field>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <a routerLink=\"/\" mat-button mat-raised-button>Back</a>\r\n        <button mat-button mat-raised-button color=\"primary\">Login</button>\r\n      </mat-card-actions>\r\n    </form>\r\n    <button\r\n      mat-button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"loginWithFacebook()\"\r\n      class=\"mr\"\r\n    >\r\n      Login with Facebook\r\n    </button>\r\n\r\n    <button\r\n      mat-button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"loginWithGoogle()\"\r\n      class=\"mr\"\r\n    >\r\n      Login with Google\r\n    </button>\r\n\r\n    <button\r\n      mat-button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"loginWithApple()\"\r\n    >\r\n      Login with Apple\r\n    </button>\r\n  </mat-card>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { take } from 'rxjs/operators';\r\nimport { AuthService } from 'src/app/features/auth/service/auth.service';\r\n\r\n@Component({\r\n  templateUrl: './register-page.component.html',\r\n  styleUrls: ['./register-page.component.scss'],\r\n})\r\nexport class RegisterPageComponent {\r\n  registerForm = this.formBuilder.group({\r\n    username: '',\r\n    password: '',\r\n    email: '',\r\n  });\r\n\r\n  loading = false;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private authService: AuthService,\r\n  ) {}\r\n\r\n  submit() {\r\n    this.loading = true;\r\n\r\n    const user = this.registerForm.value;\r\n\r\n    this.authService\r\n      .register(user)\r\n      .pipe(take(1))\r\n      .subscribe(\r\n        () => this.authService.redirectToCallback(),\r\n        () => {\r\n          this.loading = false;\r\n\r\n          this.registerForm.patchValue({\r\n            password: '',\r\n          });\r\n        },\r\n      );\r\n  }\r\n\r\n  async registerWithFacebook() {\r\n    if (this.loading) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n\r\n    try {\r\n      await this.authService.handleSocialLogin(() =>\r\n        this.authService.loginWithFacebook(),\r\n      );\r\n    } finally {\r\n      this.loading = false;\r\n    }\r\n  }\r\n\r\n  async registerWithGoogle() {\r\n    if (this.loading) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n\r\n    try {\r\n      await this.authService.handleSocialLogin(() =>\r\n        this.authService.loginWithGoogle(),\r\n      );\r\n    } finally {\r\n      this.loading = false;\r\n    }\r\n  }\r\n\r\n  async registerWithApple() {\r\n    if (this.loading) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n\r\n    try {\r\n      await this.authService.handleSocialLogin(() =>\r\n        this.authService.loginWithApple(),\r\n      );\r\n    } finally {\r\n      this.loading = false;\r\n    }\r\n  }\r\n}\r\n","<mat-spinner\r\n  class=\"position-absolute\"\r\n  diameter=\"30\"\r\n  *ngIf=\"loading\"\r\n></mat-spinner>\r\n<div class=\"container\">\r\n  <mat-card>\r\n    <h2 mat-card-title>Register</h2>\r\n    <p mat-card-subtitle>Register a new account</p>\r\n\r\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"submit()\">\r\n      <mat-form-field class=\"full-width\">\r\n        <mat-label>Username</mat-label>\r\n        <input\r\n          type=\"text\"\r\n          formControlName=\"username\"\r\n          placeholder=\"Type in your username\"\r\n          matInput\r\n        />\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"full-width\">\r\n        <mat-label>Password</mat-label>\r\n        <input\r\n          type=\"password\"\r\n          formControlName=\"password\"\r\n          placeholder=\"Type in your password\"\r\n          matInput\r\n        />\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"full-width\">\r\n        <mat-label>Email</mat-label>\r\n        <input\r\n          type=\"email\"\r\n          formControlName=\"email\"\r\n          placeholder=\"Type in your email\"\r\n          matInput\r\n        />\r\n      </mat-form-field>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <a routerLink=\"/\" mat-button mat-raised-button>Back</a>\r\n        <button mat-button mat-raised-button color=\"primary\">Register</button>\r\n      </mat-card-actions>\r\n    </form>\r\n\r\n    <button\r\n      mat-button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"registerWithFacebook()\"\r\n      class=\"mr\"\r\n    >\r\n      Register with Facebook\r\n    </button>\r\n\r\n    <button\r\n      mat-button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"registerWithGoogle()\"\r\n      class=\"mr\"\r\n    >\r\n      Register with Google\r\n    </button>\r\n\r\n    <button\r\n      mat-button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      (click)=\"registerWithApple()\"\r\n    >\r\n      Register with Apple\r\n    </button>\r\n  </mat-card>\r\n</div>\r\n","import { BaseLoginProvider, SocialUser } from 'angularx-social-login';\r\nimport { environment } from '../../../../environments/environment';\r\n\r\ndeclare const AppleID: any;\r\n\r\nexport class AppleLoginProvider extends BaseLoginProvider {\r\n  public static readonly PROVIDER_ID: string = 'APPLE';\r\n\r\n  protected auth2: any;\r\n\r\n  constructor(private app: typeof environment.apps.apple) {\r\n    super();\r\n  }\r\n\r\n  public initialize(): Promise<void> {\r\n    return new Promise(resolve => {\r\n      this.loadScript(\r\n        AppleLoginProvider.PROVIDER_ID,\r\n        'https://appleid.cdn-apple.com/appleauth/static/jsapi/appleid/1/en_US/appleid.auth.js',\r\n        () => {\r\n          AppleID.auth.init({\r\n            clientId: this.app.clientId,\r\n            scope: 'name email',\r\n            redirectURI: this.app.redirectUri,\r\n            usePopup: true,\r\n          });\r\n\r\n          resolve();\r\n        },\r\n      );\r\n    });\r\n  }\r\n\r\n  public getLoginStatus(): Promise<SocialUser> {\r\n    return new Promise(resolve => resolve(null));\r\n  }\r\n\r\n  public async signIn(signInOptions?: any): Promise<SocialUser> {\r\n    try {\r\n      const data = await AppleID.auth.signIn();\r\n\r\n      return {\r\n        name: `${data.user?.firstName} ${data.user?.lastName}`,\r\n        authorizationCode: data.authorization.code,\r\n        authToken: data.authorization.id_token,\r\n      } as SocialUser;\r\n    } catch (err) {\r\n      console.error(err);\r\n\r\n      throw err;\r\n    }\r\n  }\r\n\r\n  public signOut(revoke?: boolean): Promise<void> {\r\n    return new Promise(resolve => resolve());\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport {\r\n  FacebookLoginProvider,\r\n  GoogleLoginProvider,\r\n  SocialAuthService,\r\n} from 'angularx-social-login';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { mergeMap, take, tap } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport Swal from 'sweetalert2';\r\nimport { ErrorDialogInterceptor } from '../../../core/interceptor/error-dialog.interceptor';\r\nimport { SubscriptionService } from '../../user/service/subscription.service';\r\nimport { AuthTokenInterceptor } from '../interceptor/auth-token.interceptor';\r\nimport { AppleLoginProvider } from '../provider/apple-login.provider';\r\n\r\nexport interface TokenResponse {\r\n  access_token: string;\r\n  refresh_token: string;\r\n}\r\n\r\nexport interface User {\r\n  _id: string;\r\n  username: string;\r\n  password: string;\r\n  email: string;\r\n  online: boolean;\r\n  isSocial: boolean;\r\n}\r\n\r\nconst { api } = environment;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  user$ = new BehaviorSubject<User>(null);\r\n\r\n  get user(): User {\r\n    return this.user$.getValue();\r\n  }\r\n\r\n  get isAuthenticated(): boolean {\r\n    return this.user != null;\r\n  }\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private socialService: SocialAuthService,\r\n    private router: Router,\r\n    private subscriptionService: SubscriptionService,\r\n  ) { }\r\n\r\n  login(user: Partial<User>) {\r\n    return this.http\r\n      .post<TokenResponse>(`${api}/auth/login`, user)\r\n      .pipe(mergeMap(response => this.setTokens(response)));\r\n  }\r\n\r\n  loginWithFacebook() {\r\n    return this.loginWith(FacebookLoginProvider.PROVIDER_ID, {\r\n      scope: 'email,public_profile',\r\n      return_scopes: true,\r\n      enable_profile_selector: true,\r\n    });\r\n  }\r\n\r\n  loginWithGoogle() {\r\n    return this.loginWith(GoogleLoginProvider.PROVIDER_ID, {\r\n      scope: 'profile email',\r\n    });\r\n  }\r\n\r\n  loginWithApple() {\r\n    return this.loginWith(AppleLoginProvider.PROVIDER_ID, {\r\n      scope: 'profile email',\r\n    });\r\n  }\r\n\r\n  handleSocialLogin(method: () => Promise<Observable<User>>) {\r\n    return new Promise<void>(async (resolve, reject) => {\r\n      try {\r\n        const observer = await method();\r\n\r\n        return observer.pipe(take(1)).subscribe(\r\n          () => {\r\n            resolve();\r\n\r\n            this.redirectToCallback();\r\n          },\r\n          e => reject(e),\r\n        );\r\n      } catch (e) {\r\n        Swal.fire({\r\n          title: 'Oops...!',\r\n          text:\r\n            e.message ||\r\n            e.details ||\r\n            'An error occurred completing the authentication',\r\n          icon: 'error',\r\n        });\r\n\r\n        reject(e);\r\n      }\r\n    });\r\n  }\r\n\r\n  private async loginWith(providerId: string, options?: any) {\r\n    const user = await this.socialService.signIn(providerId);\r\n    return this.http\r\n      .post<TokenResponse>(\r\n        `${api}/auth/${this.getProviderUri(providerId)}-login`,\r\n        {\r\n          name: user.name,\r\n          accessToken: user.authToken,\r\n          authorizationCode: user.authorizationCode,\r\n          type: 'web',\r\n        },\r\n      )\r\n      .pipe(\r\n        take(1),\r\n        mergeMap(tokens => this.setTokens(tokens)),\r\n      );\r\n  }\r\n\r\n  private getProviderUri(providerId: string) {\r\n    switch (providerId) {\r\n      case FacebookLoginProvider.PROVIDER_ID:\r\n        return 'facebook';\r\n      case GoogleLoginProvider.PROVIDER_ID:\r\n        return 'google';\r\n      case AppleLoginProvider.PROVIDER_ID:\r\n        return 'apple';\r\n      default:\r\n        return undefined;\r\n    }\r\n  }\r\n\r\n  register(user: Partial<User>) {\r\n    return this.http\r\n      .post<TokenResponse>(`${api}/auth/register`, user)\r\n      .pipe(mergeMap(response => this.setTokens(response)));\r\n  }\r\n\r\n  getProfile() {\r\n    return this.http\r\n      .get<User>(`${api}/auth/me`, {\r\n        headers: {\r\n          [ErrorDialogInterceptor.skipHeader]: 'true',\r\n        },\r\n      })\r\n      .pipe(tap(user => this.user$.next(user)));\r\n  }\r\n\r\n  loginWithRefreshToken() {\r\n    return this.http\r\n      .post<TokenResponse>(\r\n        `${api}/auth/refresh-token`,\r\n        {\r\n          refreshToken: this.getRefreshToken(),\r\n        },\r\n        {\r\n          headers: {\r\n            [AuthTokenInterceptor.skipHeader]: 'true',\r\n          },\r\n        },\r\n      )\r\n      .pipe(mergeMap(response => this.setTokens(response)));\r\n  }\r\n\r\n  logoutFromAllDevices() {\r\n    return this.http\r\n      .delete<TokenResponse>(`${api}/auth/logout-from-all-devices`)\r\n      .pipe(\r\n        mergeMap(tokens => this.setTokens(tokens)),\r\n        tap(() => this.subscriptionService.requestSubscription()),\r\n      );\r\n  }\r\n\r\n  async setTokens(response: TokenResponse) {\r\n    this.setRefreshToken(response.refresh_token);\r\n\r\n    return this.setAccessToken(response.access_token);\r\n  }\r\n\r\n  getAccessToken() {\r\n    return localStorage.getItem('accessToken');\r\n  }\r\n\r\n  async setAccessToken(token: string) {\r\n    localStorage.setItem('accessToken', token);\r\n\r\n    return this.getProfile().toPromise();\r\n  }\r\n\r\n  getRefreshToken() {\r\n    return localStorage.getItem('refreshToken');\r\n  }\r\n\r\n  setRefreshToken(token: string) {\r\n    localStorage.setItem('refreshToken', token);\r\n  }\r\n\r\n  getLoginCallbackUrl() {\r\n    return localStorage.getItem('loginCallbackUrl');\r\n  }\r\n\r\n  setLoginCallbackUrl(url: string) {\r\n    localStorage.setItem('loginCallbackUrl', url);\r\n  }\r\n\r\n  async redirectToCallback() {\r\n    const output = await this.router.navigate([\r\n      this.getLoginCallbackUrl() || '/',\r\n    ]);\r\n\r\n    this.setLoginCallbackUrl(null);\r\n\r\n    return output;\r\n  }\r\n\r\n  logout() {\r\n    const callback = () => {\r\n      sessionStorage.clear();\r\n\r\n      localStorage.clear();\r\n\r\n      this.user$.next(null);\r\n    };\r\n\r\n    this.subscriptionService\r\n      .delete()\r\n      .pipe(take(1))\r\n      .subscribe(callback, callback);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { routes } from './routes';\r\nimport { MainComponent } from './main/main.component';\r\nimport { UserModule } from './user/user.module';\r\nimport { AuthModule } from './auth/auth.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { RoomModule } from './room/room.module';\r\nimport { MessagesModule } from './messages/messages.module';\r\nimport { NotificationModule } from './notification/notification.module';\r\n\r\n@NgModule({\r\n  declarations: [MainComponent],\r\n  imports: [\r\n    SharedModule,\r\n    UserModule,\r\n    AuthModule,\r\n    RoomModule,\r\n    MessagesModule,\r\n    NotificationModule,\r\n    RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' }),\r\n  ],\r\n  exports: [RouterModule, NotificationModule],\r\n})\r\nexport class FeaturesModule {}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\nimport { AuthService, User } from 'src/app/features/auth/service/auth.service';\r\n\r\n@Component({\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.scss'],\r\n})\r\nexport class MainComponent implements OnInit, OnDestroy {\r\n  user: User;\r\n\r\n  destroy$ = new Subject();\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n    this.authService.user$\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(user => (this.user = user));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout();\r\n  }\r\n}\r\n","<div class=\"container\" *ngIf=\"!user; else logged\">\r\n  <a routerLink=\"/login\" mat-button mat-raised-button>Login</a>\r\n  <a routerLink=\"/register\" mat-button mat-raised-button>Register</a>\r\n  <a routerLink=\"/recover\" mat-button mat-raised-button>Forgot my password</a>\r\n</div>\r\n\r\n<ng-template #logged>\r\n  <div class=\"container\">\r\n    <h3>\r\n      Welcome, <b>{{ user.username }}</b\r\n      >!\r\n    </h3>\r\n    <button (click)=\"logout()\" mat-button mat-raised-button>Logout</button>\r\n    <a routerLink=\"/rooms\" mat-button mat-raised-button>Rooms</a>\r\n    <a routerLink=\"/settings\" mat-button mat-raised-button>Settings</a>\r\n  </div>\r\n</ng-template>\r\n","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { boundMethod } from 'autobind-decorator';\r\nimport { remove } from 'lodash';\r\nimport { Subject, timer } from 'rxjs';\r\nimport { filter, mergeMap, take, takeUntil, tap } from 'rxjs/operators';\r\nimport { Sound, SoundService } from 'src/app/shared/services/sound.service';\r\nimport { HttpError } from '../../../../core/interceptor/error-dialog.interceptor';\r\nimport { MainSocket } from '../../../../core/socket/main-socket';\r\nimport { ConfirmDialogComponent } from '../../../../shared/components/confirm-dialog/confirm-dialog.component';\r\nimport { AuthService, User } from '../../../auth/service/auth.service';\r\nimport { Room } from '../../../room/service/room.service';\r\nimport { Message, MessageService } from '../../service/message.service';\r\n\r\nexport enum MessageType {\r\n  Direct = 'direct',\r\n  Room = 'room',\r\n}\r\n\r\ninterface LocalMessage extends Message {\r\n  createdAtDate: Date;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-messages',\r\n  templateUrl: './messages.component.html',\r\n  styleUrls: ['./messages.component.scss'],\r\n})\r\nexport class MessagesComponent implements OnInit, OnDestroy {\r\n  @Input() type: MessageType;\r\n  @Input() room?: Room;\r\n  @Input() to?: User;\r\n  @Input() updateMessages$: Subject<void>;\r\n  @Input() messages: LocalMessage[] = [];\r\n\r\n  @ViewChild('messagesContainer') messagesContainer: ElementRef<HTMLDivElement>;\r\n\r\n  messageForm = this.formBuilder.group({\r\n    message: '',\r\n  });\r\n\r\n  isConnected = false;\r\n\r\n  get messagesElement() {\r\n    return this.messagesContainer.nativeElement;\r\n  }\r\n\r\n  destroy$ = new Subject();\r\n  MessageType = MessageType;\r\n  user: User;\r\n  firstMessage: Message;\r\n\r\n  typing: User[] = [];\r\n\r\n  isTyping = false;\r\n\r\n  private readonly limit = 30;\r\n  private readonly scrollOffset = 200;\r\n  private readonly typingTimeout = 5000;\r\n\r\n  scrolledToLast = false;\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private socket: MainSocket,\r\n    private formBuilder: FormBuilder,\r\n    private soundService: SoundService,\r\n    private authService: AuthService,\r\n    private dialog: MatDialog,\r\n    private changeDetector: ChangeDetectorRef,\r\n  ) {}\r\n\r\n  get partnerId() {\r\n    switch (this.type) {\r\n      case MessageType.Room:\r\n        return this.room._id;\r\n      case MessageType.Direct:\r\n        return this.to._id;\r\n      default:\r\n        return undefined;\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.socket.connect();\r\n\r\n    this.socket\r\n      .onConnect()\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(() => {\r\n        this.isConnected = true;\r\n\r\n        if (!this.updateMessages$) {\r\n          this.getMessages();\r\n        }\r\n      });\r\n\r\n    this.socket\r\n      .onDisconnect()\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(() => (this.isConnected = false));\r\n\r\n    this.authService.user$\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(user => (this.user = user));\r\n\r\n    this.updateMessages$\r\n      ?.pipe(takeUntil(this.destroy$))\r\n      .subscribe(this.getMessages);\r\n\r\n    this.messageService\r\n      .onMessage(this.type)\r\n      .pipe(\r\n        takeUntil(this.destroy$),\r\n        filter(\r\n          message =>\r\n            this.isCurrentSection(\r\n              message.to !== this.user._id ? message.to : message.from._id,\r\n              message.room,\r\n            ) && !this.messages.some(msg => msg._id === message._id),\r\n        ),\r\n      )\r\n      .subscribe(this.handleMessageEvent);\r\n\r\n    this.messageService\r\n      .onDeleteMessagesEvent(this.type)\r\n      .pipe(\r\n        takeUntil(this.destroy$),\r\n        filter(id => this.isCurrentSection(id)),\r\n      )\r\n      .subscribe(() => remove(this.messages, () => true));\r\n\r\n    this.messageService\r\n      .onDeleteMessageEvent(this.type)\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(messageId => {\r\n        if (messageId === this.firstMessage?._id) {\r\n          if (this.messages.some(message => message._id === messageId)) {\r\n            this.firstMessage = this.messages[1];\r\n          } else {\r\n            this.updateFirstMessage();\r\n          }\r\n        }\r\n\r\n        remove(this.messages, message => message._id === messageId);\r\n      });\r\n\r\n    this.updateFirstMessage();\r\n\r\n    this.messageService\r\n      .onTyping(this.type, this.partnerId)\r\n      .pipe(\r\n        takeUntil(this.destroy$),\r\n        filter(\r\n          ({ user, room }) =>\r\n            this.isCurrentSection(user._id, room?._id) &&\r\n            this.user._id !== user._id,\r\n        ),\r\n        tap(({ user }) => {\r\n          if (!this.typing.some(u => u._id === user._id)) {\r\n            this.typing.push(user);\r\n          }\r\n\r\n          this.changeDetector.detectChanges();\r\n\r\n          this.scrollToLastIfNecessary();\r\n        }),\r\n        mergeMap(({ user }) =>\r\n          timer(this.typingTimeout).pipe(\r\n            takeUntil(\r\n              this.messageService\r\n                .onTyping(this.type, this.partnerId)\r\n                .pipe(\r\n                  filter(\r\n                    ({ user: typingUser, room }) =>\r\n                      this.isCurrentSection(user._id, room?._id) &&\r\n                      user._id === typingUser._id,\r\n                  ),\r\n                ),\r\n            ),\r\n            tap(() => remove(this.typing, u => u._id === user._id)),\r\n          ),\r\n        ),\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.socket.disconnect();\r\n\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  @boundMethod\r\n  getMessages() {\r\n    this.messageService\r\n      .getMessages(this.type, this.partnerId, this.limit)\r\n      .pipe(take(1))\r\n      .subscribe(messages => {\r\n        remove(this.messages, () => true);\r\n        this.messages.push(...messages.map(this.convertToLocalMessage));\r\n\r\n        this.scrollToLastMessages();\r\n      });\r\n  }\r\n\r\n  updateFirstMessage() {\r\n    this.messageService\r\n      .getFirstMessage(this.type, this.partnerId)\r\n      .pipe(take(1))\r\n      .subscribe(message => (this.firstMessage = message));\r\n  }\r\n\r\n  getPreviousMessages() {\r\n    const startingScrollHeight = this.messagesElement.scrollHeight;\r\n\r\n    this.messageService\r\n      .getMessages(\r\n        this.type,\r\n        this.partnerId,\r\n        this.limit,\r\n        this.messages[0].createdAt,\r\n      )\r\n      .subscribe(messages => {\r\n        this.messages.splice(0, 0, ...messages.map(this.convertToLocalMessage));\r\n\r\n        this.changeDetector.detectChanges();\r\n\r\n        this.messagesElement.scrollTo(\r\n          0,\r\n          this.messagesElement.scrollHeight - startingScrollHeight,\r\n        );\r\n      });\r\n  }\r\n\r\n  @boundMethod\r\n  handleMessageEvent(message: Message) {\r\n    if (message.from._id === this.user._id) {\r\n      this.isTyping = false;\r\n    }\r\n\r\n    this.messages.push(this.convertToLocalMessage(message));\r\n\r\n    remove(this.typing, user => user._id === message.from._id);\r\n\r\n    if (message.from._id !== this.user._id) {\r\n      this.soundService.playSound(Sound.Message);\r\n    }\r\n\r\n    this.scrollToLastIfNecessary();\r\n\r\n    return;\r\n  }\r\n\r\n  isCurrentSection(...objectIds: string[]) {\r\n    return objectIds.some(\r\n      id =>\r\n        (this.room && this.room._id === id) ||\r\n        (this.to && this.to._id === id) ||\r\n        this.user._id === id,\r\n    );\r\n  }\r\n\r\n  scrollToLastIfNecessary() {\r\n    const element = this.messagesElement;\r\n\r\n    if (\r\n      element.scrollTop >\r\n      element.scrollHeight - element.offsetHeight - this.scrollOffset\r\n    ) {\r\n      this.scrolledToLast = false;\r\n\r\n      this.scrollToLastMessages();\r\n    }\r\n  }\r\n\r\n  scrollToLastMessages() {\r\n    this.changeDetector.detectChanges();\r\n\r\n    this.messagesElement.scrollTo({\r\n      top: this.messagesElement.scrollHeight,\r\n      behavior: 'smooth',\r\n    });\r\n\r\n    timer(1000).subscribe(() => (this.scrolledToLast = true));\r\n  }\r\n\r\n  sendTyping() {\r\n    if (this.isTyping) {\r\n      return;\r\n    }\r\n\r\n    this.messageService.sendTyping(this.type, this.partnerId);\r\n\r\n    this.isTyping = true;\r\n\r\n    timer(this.typingTimeout - 1000).subscribe(() => (this.isTyping = false));\r\n  }\r\n\r\n  sendMessage() {\r\n    const message = this.messageForm.value.message;\r\n\r\n    if (!message?.trim()) {\r\n      return;\r\n    }\r\n\r\n    if (!this.isConnected) {\r\n      this.handleMessageCallback();\r\n    }\r\n\r\n    this.messageService.sendMessage(\r\n      this.type,\r\n      this.partnerId,\r\n      message,\r\n      this.handleMessageCallback,\r\n    );\r\n  }\r\n\r\n  @boundMethod\r\n  handleMessageCallback(response?: boolean | HttpError) {\r\n    if (typeof response !== 'object') {\r\n      this.messageForm.patchValue({\r\n        message: '',\r\n      });\r\n    }\r\n  }\r\n\r\n  onScroll(e: Event) {\r\n    if (\r\n      !this.scrolledToLast ||\r\n      this.messages[0]?._id === this.firstMessage?._id\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const element = e.target as HTMLDivElement;\r\n\r\n    if (element.scrollTop <= 5) {\r\n      this.getPreviousMessages();\r\n    }\r\n  }\r\n\r\n  confirmDeleteMessage(message: Message) {\r\n    const dialog = this.dialog.open(ConfirmDialogComponent);\r\n\r\n    dialog\r\n      .afterClosed()\r\n      .pipe(take(1))\r\n      .subscribe(confirm => {\r\n        if (confirm) {\r\n          this.deleteMessage(message);\r\n        }\r\n      });\r\n  }\r\n\r\n  deleteMessage(message: Message) {\r\n    this.messageService\r\n      .deleteMessage(this.type, message)\r\n      .pipe(take(1))\r\n      .subscribe();\r\n  }\r\n\r\n  private convertToLocalMessage(message: Message): LocalMessage {\r\n    return {\r\n      ...message,\r\n      createdAtDate: new Date(message.createdAt),\r\n    };\r\n  }\r\n}\r\n","<div class=\"chat-container d-flex flex-column flex-grow-1\">\r\n  <div class=\"position-relative flex-grow-1\">\r\n    <div\r\n      class=\"\r\n        position-absolute\r\n        h-100\r\n        w-100\r\n        d-flex\r\n        align-items-center\r\n        justify-content-center\r\n        z-10\r\n      \"\r\n      *ngIf=\"!isConnected\"\r\n    >\r\n      <mat-spinner class=\"position-absolute\" diameter=\"60\"></mat-spinner>\r\n      <h1 class=\"mt-6\">Connecting</h1>\r\n    </div>\r\n    <div\r\n      class=\"position-absolute h-100 messages w-100 d-flex flex-column\"\r\n      #messagesContainer\r\n      (scroll)=\"onScroll($event)\"\r\n    >\r\n      <div\r\n        *ngFor=\"let message of messages\"\r\n        class=\"message p-2 d-flex flex-column\"\r\n        [ngClass]=\"[message.from._id === user._id ? 'me' : 'partner']\"\r\n      >\r\n        <a\r\n          role=\"button\"\r\n          [routerLink]=\"['/direct-message', message.from.username]\"\r\n          >{{ message.from.username }}</a\r\n        >\r\n        <div class=\"bubble-container d-flex align-items-center\">\r\n          <div class=\"bubble p-3\">{{ message.message }}</div>\r\n          <mat-icon\r\n            *ngIf=\"\r\n              type === MessageType.Direct ||\r\n              message.from._id === user._id ||\r\n              room?.owner._id === user._id\r\n            \"\r\n            role=\"button\"\r\n            class=\"delete\"\r\n            (click)=\"confirmDeleteMessage(message)\"\r\n            >delete</mat-icon\r\n          >\r\n        </div>\r\n        <i>{{ message.createdAtDate | date: 'short' }}</i>\r\n      </div>\r\n\r\n      <div\r\n        *ngFor=\"let userTyping of typing\"\r\n        class=\"message p-2 d-flex flex-column\"\r\n        [ngClass]=\"[userTyping._id === user._id ? 'me' : 'partner']\"\r\n      >\r\n        <a\r\n          role=\"button\"\r\n          [routerLink]=\"['/direct-message', userTyping.username]\"\r\n          >{{ userTyping.username }}</a\r\n        >\r\n        <div class=\"bubble-container typing d-flex align-items-center\">\r\n          <div class=\"bubble p-3\">\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"text-container bg-white p-2\">\r\n    <form\r\n      (ngSubmit)=\"sendMessage()\"\r\n      [formGroup]=\"messageForm\"\r\n      class=\"d-flex align-items-center\"\r\n    >\r\n      <mat-form-field class=\"full-width fs-4 me-2\">\r\n        <mat-label>Message</mat-label>\r\n        <textarea\r\n          type=\"text\"\r\n          placeholder=\"Type a message\"\r\n          matInput\r\n          formControlName=\"message\"\r\n          rows=\"2\"\r\n          (keydown)=\"sendTyping()\"\r\n          (keydown.enter)=\"sendMessage()\"\r\n        ></textarea>\r\n      </mat-form-field>\r\n      <div class=\"d-flex justify-content-center\">\r\n        <button mat-icon-button color=\"primary\">\r\n          <mat-icon>send</mat-icon>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MessagesComponent } from './components/messages/messages.component';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { DirectMessagePageComponent } from './pages/direct-message-page/direct-message-page.component';\r\n\r\n@NgModule({\r\n  declarations: [MessagesComponent, DirectMessagePageComponent],\r\n  imports: [CommonModule, SharedModule],\r\n  exports: [MessagesComponent, DirectMessagePageComponent],\r\n})\r\nexport class MessagesModule {}\r\n","import { Message } from '@angular/compiler/src/i18n/i18n_ast';\r\nimport { ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { interval, Subject } from 'rxjs';\r\nimport {\r\n  catchError,\r\n  filter,\r\n  mergeMap,\r\n  take,\r\n  takeUntil,\r\n  tap,\r\n} from 'rxjs/operators';\r\nimport { User } from '../../../auth/service/auth.service';\r\nimport { UserService } from '../../../user/service/user.service';\r\nimport { MessageType } from '../../components/messages/messages.component';\r\n\r\n@Component({\r\n  templateUrl: './direct-message-page.component.html',\r\n  styleUrls: ['./direct-message-page.component.scss'],\r\n})\r\nexport class DirectMessagePageComponent implements OnInit, OnDestroy {\r\n  MessageType = MessageType;\r\n  updateMessages$ = new Subject();\r\n  messages: Message[] = [];\r\n  destroy$ = new Subject();\r\n  toName: string;\r\n  to: User;\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private changeDetector: ChangeDetectorRef,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.route.params\r\n      .pipe(\r\n        takeUntil(this.destroy$),\r\n        mergeMap(params => {\r\n          this.toName = params.username;\r\n\r\n          return this.userService.getUser(this.toName).pipe(take(1));\r\n        }),\r\n        catchError(() => this.router.navigate(['/'])),\r\n        filter<User>(user => typeof user !== 'boolean'),\r\n        tap(user => {\r\n          this.to = user;\r\n\r\n          this.changeDetector.detectChanges();\r\n\r\n          this.updateMessages$.next();\r\n        }),\r\n      )\r\n      .subscribe();\r\n\r\n    interval(5000)\r\n      .pipe(\r\n        takeUntil(this.destroy$),\r\n        filter(() => this.to != null),\r\n        mergeMap(() => this.userService.getUser(this.toName).pipe(take(1))),\r\n        tap(\r\n          user => (this.to = user),\r\n          () => this.router.navigate(['/rooms']),\r\n        ),\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n\r\n    this.updateMessages$.complete();\r\n  }\r\n}\r\n","<div class=\"d-flex flex-column flex-grow-1\" *ngIf=\"to\">\r\n  <div class=\"d-flex p-4 justify-content-between\">\r\n    <h1 class=\"fw-bold\">\r\n      Chatting with {{ to.username }} ({{ to.online ? 'Online' : 'Offline' }})\r\n    </h1>\r\n    <a mat-icon-button routerLink=\"/\">\r\n      <mat-icon>logout</mat-icon>\r\n    </a>\r\n  </div>\r\n  <app-messages\r\n    [type]=\"MessageType.Direct\"\r\n    [to]=\"to\"\r\n    [messages]=\"messages\"\r\n    [updateMessages$]=\"updateMessages$\"\r\n  ></app-messages>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { MainSocket } from '../../../core/socket/main-socket';\r\nimport { AuthTokenInterceptor } from '../../auth/interceptor/auth-token.interceptor';\r\nimport { User } from '../../auth/service/auth.service';\r\nimport { Room } from '../../room/service/room.service';\r\nimport { MessageType } from '../components/messages/messages.component';\r\n\r\nexport interface Message {\r\n  _id: string;\r\n  message: string;\r\n  to: string;\r\n  room?: string;\r\n  from?: User;\r\n  createdAt?: string;\r\n}\r\n\r\nexport interface TypingResponse {\r\n  room?: Room;\r\n  user: User;\r\n}\r\n\r\nconst { api } = environment;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MessageService {\r\n  constructor(private socket: MainSocket, private http: HttpClient) {}\r\n\r\n  getMessages(type: MessageType, id: string, limit: number, before?: string) {\r\n    const params = { limit, before };\r\n\r\n    for (const key of Object.keys(params)) {\r\n      if (!params[key]) {\r\n        delete params[key];\r\n      }\r\n    }\r\n\r\n    return this.http.get<Message[]>(`${api}/message/${type}/${id}`, { params });\r\n  }\r\n\r\n  getFirstMessage(type: MessageType, id: string) {\r\n    return this.http.get<Message>(`${api}/message/${type}-first-message/${id}`);\r\n  }\r\n\r\n  onMessage(type: MessageType) {\r\n    return this.socket.fromEvent<Message>(`message:${type}`);\r\n  }\r\n\r\n  sendMessage<T>(\r\n    type: MessageType,\r\n    id: string,\r\n    message: string,\r\n    callback?: (data: T) => void,\r\n  ) {\r\n    return this.socket.emit(\r\n      `message:${type}`,\r\n      {\r\n        to: id,\r\n        roomId: id,\r\n        message,\r\n      },\r\n      callback,\r\n    );\r\n  }\r\n\r\n  sendTyping(type: MessageType, id: string) {\r\n    return this.socket.emit(`message:${type}:typing`, id);\r\n  }\r\n\r\n  deleteMessage(type: MessageType, message: Message) {\r\n    return this.http.delete<Message>(`${api}/message/${type}`, {\r\n      body: {\r\n        messageId: message._id,\r\n        roomId: message.room,\r\n        to: message.to,\r\n      },\r\n      headers: {\r\n        [AuthTokenInterceptor.skipHeader]: 'true',\r\n      },\r\n    });\r\n  }\r\n\r\n  onDeleteMessagesEvent(type: MessageType) {\r\n    return this.socket.fromEvent<string>(`${type}:delete_messages`);\r\n  }\r\n\r\n  onDeleteMessageEvent(type: MessageType) {\r\n    return this.socket.fromEvent<string>(`${type}:delete_message`);\r\n  }\r\n\r\n  onTyping(type: MessageType, id: string) {\r\n    return this.socket.fromEvent<TypingResponse>(`message:${type}:typing`);\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { filter, mergeMap, takeUntil } from 'rxjs/operators';\r\nimport { AuthService, User } from '../../../auth/service/auth.service';\r\nimport { SubscriptionService } from '../../../user/service/subscription.service';\r\nimport { NotificationService } from '../../service/notification.service';\r\n\r\n@Component({\r\n  selector: 'app-push-notification',\r\n  templateUrl: './push-notification.component.html',\r\n  styleUrls: ['./push-notification.component.scss'],\r\n})\r\nexport class PushNotificationComponent implements OnInit, OnDestroy {\r\n  destroy$ = new Subject();\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private notificationService: NotificationService,\r\n    private subscriptionService: SubscriptionService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.authService.user$\r\n      .pipe(\r\n        takeUntil(this.destroy$),\r\n        filter<User>(user => user != null),\r\n        mergeMap(() => this.subscriptionService.requestSubscription()),\r\n      )\r\n      .subscribe();\r\n\r\n    this.notificationService.updateAvailable$.subscribe();\r\n\r\n    this.notificationService.checkForUpdates();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { PushNotificationComponent } from './components/push-notification/push-notification.component';\r\n\r\n@NgModule({\r\n  declarations: [PushNotificationComponent],\r\n  imports: [CommonModule, SharedModule],\r\n  exports: [PushNotificationComponent],\r\n})\r\nexport class NotificationModule {}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { SwPush, SwUpdate } from '@angular/service-worker';\r\nimport { of } from 'rxjs';\r\nimport { catchError, mergeMap, tap, timeout } from 'rxjs/operators';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { AuthTokenInterceptor } from '../../auth/interceptor/auth-token.interceptor';\r\n\r\ninterface Config {\r\n  webPublicKey: string;\r\n}\r\n\r\nconst { api } = environment;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class NotificationService {\r\n  updateAvailable$ = this.swUpdate.available.pipe(\r\n    tap(async () => {\r\n      await this.swUpdate.activateUpdate();\r\n\r\n      document.location.reload();\r\n    }),\r\n  );\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private swPush: SwPush,\r\n    private swUpdate: SwUpdate,\r\n  ) {}\r\n\r\n  getConfig() {\r\n    return this.http.get<Config>(`${api}/notification/config`);\r\n  }\r\n\r\n  requestSubscription() {\r\n    return this.getConfig().pipe(\r\n      mergeMap(({ webPublicKey: serverPublicKey }) =>\r\n        this.swPush.requestSubscription({ serverPublicKey }),\r\n      ),\r\n      tap(subscription => this.setSubscription(subscription)),\r\n    );\r\n  }\r\n\r\n  getSubscription(): PushSubscription {\r\n    return JSON.parse(sessionStorage.getItem('notificationToken') || '{}');\r\n  }\r\n\r\n  setSubscription(subscription: PushSubscription) {\r\n    sessionStorage.setItem('notificationToken', JSON.stringify(subscription));\r\n  }\r\n\r\n  async checkForUpdates() {\r\n    try {\r\n      await this.swUpdate.checkForUpdate();\r\n    } catch (e) {\r\n      console.error('An error occured checking service worker updates', e);\r\n    }\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { take } from 'rxjs/operators';\r\nimport { RoomService } from '../../service/room.service';\r\n\r\n@Component({\r\n  selector: 'app-join-room-dialog',\r\n  templateUrl: './join-room-dialog.component.html',\r\n  styleUrls: ['./join-room-dialog.component.scss'],\r\n})\r\nexport class JoinRoomDialogComponent {\r\n  joinForm = this.formBuilder.group({\r\n    code: '',\r\n  });\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private roomService: RoomService,\r\n    private dialog: MatDialogRef<JoinRoomDialogComponent>,\r\n    private router: Router,\r\n  ) {}\r\n\r\n  submit() {\r\n    const array = this.joinForm.value.code.trim().split('/');\r\n    const code = array[array.length - 1];\r\n\r\n    if (!code) {\r\n      return;\r\n    }\r\n\r\n    this.roomService\r\n      .getRoom(code)\r\n      .pipe(take(1))\r\n      .subscribe(room => {\r\n        this.dialog.close();\r\n\r\n        this.router.navigate(['/room', room._id]);\r\n      });\r\n  }\r\n}\r\n","<div>\r\n  <h1 mat-dialog-title>Join</h1>\r\n  <form [formGroup]=\"joinForm\" (ngSubmit)=\"submit()\">\r\n    <mat-form-field class=\"full-width\">\r\n      <mat-label>Code</mat-label>\r\n      <input\r\n        type=\"text\"\r\n        formControlName=\"code\"\r\n        placeholder=\"Type the room code\"\r\n        matInput\r\n      />\r\n    </mat-form-field>\r\n    <button mat-raised-button>Join</button>\r\n  </form>\r\n</div>\r\n","import { Clipboard } from '@angular/cdk/clipboard';\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { remove } from 'lodash';\r\nimport { take, tap } from 'rxjs/operators';\r\nimport { ConfirmDialogComponent } from '../../../../shared/components/confirm-dialog/confirm-dialog.component';\r\nimport { updateItem } from '../../../../shared/utils/upsert-item';\r\nimport { User } from '../../../auth/service/auth.service';\r\nimport { Room, RoomService } from '../../service/room.service';\r\nimport {\r\n  ActionType,\r\n  UpsertRoomDialogComponent,\r\n} from '../upsert-room-dialog/upsert-room-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-room-item',\r\n  templateUrl: './room-item.component.html',\r\n  styleUrls: ['./room-item.component.scss'],\r\n})\r\nexport class RoomItemComponent implements OnInit {\r\n  @Input() room: Room;\r\n  @Input() user: User;\r\n  @Input() publicRooms: Room[] = [];\r\n  @Input() userRooms: Room[] = [];\r\n  @Input() memberRooms: Room[] = [];\r\n\r\n  loading = false;\r\n  isOwner = false;\r\n\r\n  get isMember() {\r\n    return this.memberRooms.some(e => e._id === this.room._id);\r\n  }\r\n\r\n  constructor(\r\n    private roomService: RoomService,\r\n    private dialog: MatDialog,\r\n    private clipboard: Clipboard,\r\n    private router: Router,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.isOwner =\r\n      this.room.owner === this.user._id ||\r\n      (this.room.owner as User)._id === this.user._id;\r\n  }\r\n\r\n  openUpdateDialog() {\r\n    const dialog = this.dialog.open(UpsertRoomDialogComponent, {\r\n      data: {\r\n        type: ActionType.Update,\r\n        room: this.room,\r\n      },\r\n    });\r\n\r\n    dialog\r\n      .afterClosed()\r\n      .pipe(take(1))\r\n      .subscribe((updatedRoom: Room) => {\r\n        updateItem(this.publicRooms, r => r._id === this.room._id, updatedRoom);\r\n        updateItem(this.memberRooms, r => r._id === this.room._id, updatedRoom);\r\n        updateItem(this.userRooms, r => r._id === this.room._id, updatedRoom);\r\n      });\r\n  }\r\n\r\n  confirmDelete() {\r\n    const dialog = this.dialog.open(ConfirmDialogComponent);\r\n\r\n    dialog\r\n      .afterClosed()\r\n      .pipe(take(1))\r\n      .subscribe(confirm => {\r\n        if (confirm) {\r\n          this.delete();\r\n        }\r\n      });\r\n  }\r\n\r\n  delete() {\r\n    if (this.loading) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n\r\n    this.roomService\r\n      .deleteRoom(this.room)\r\n      .pipe(take(1))\r\n      .subscribe(() => {\r\n        this.loading = false;\r\n\r\n        remove(this.userRooms, r => r._id === this.room._id);\r\n        remove(this.publicRooms, r => r._id === this.room._id);\r\n        remove(this.memberRooms, r => r._id === this.room._id);\r\n      });\r\n  }\r\n\r\n  joinRoom() {\r\n    this.loading = true;\r\n\r\n    const process = () => (this.loading = false);\r\n\r\n    this.roomService\r\n      .getRoom(this.room._id)\r\n      .pipe(take(1), tap(process, process))\r\n      .subscribe(() => this.router.navigate(['/room', this.room._id]));\r\n  }\r\n\r\n  confirmLeaveRoom() {\r\n    const dialog = this.dialog.open(ConfirmDialogComponent);\r\n\r\n    dialog\r\n      .afterClosed()\r\n      .pipe(take(1))\r\n      .subscribe(confirm => {\r\n        if (confirm) {\r\n          this.leaveRoom();\r\n        }\r\n      });\r\n  }\r\n\r\n  leaveRoom() {\r\n    this.loading = true;\r\n\r\n    const process = () => (this.loading = false);\r\n\r\n    this.roomService\r\n      .leaveRoom(this.room._id)\r\n      .pipe(take(1), tap(process, process))\r\n      .subscribe(() => remove(this.memberRooms, r => r._id === this.room._id));\r\n  }\r\n\r\n  copyUrl() {\r\n    this.clipboard.copy(`${window.location.origin}/room/${this.room._id}`);\r\n  }\r\n\r\n  isString<T>(value: T) {\r\n    return typeof value === 'string';\r\n  }\r\n}\r\n","<mat-list-item>\r\n  <mat-icon matListIcon>person</mat-icon>\r\n  <h4 matLine>{{ room.title }} ({{ room.members.length }})</h4>\r\n  <a\r\n    matLine\r\n    class=\"description\"\r\n    *ngIf=\"!isOwner && !isString(room.owner)\"\r\n    [routerLink]=\"['/direct-message', $any(room.owner).username]\"\r\n  >\r\n    {{ $any(room.owner).username }}\r\n  </a>\r\n  <button mat-button class=\"text-primary\" (click)=\"joinRoom()\">Join</button>\r\n</mat-list-item>\r\n\r\n<div class=\"mb-2 d-flex\">\r\n  <button mat-button (click)=\"copyUrl()\">Copy</button>\r\n  <div *ngIf=\"isOwner\">\r\n    <button mat-button (click)=\"openUpdateDialog()\">Edit</button>\r\n    <button mat-button (click)=\"confirmDelete()\">Delete</button>\r\n  </div>\r\n  <div *ngIf=\"isMember\">\r\n    <button mat-button (click)=\"confirmLeaveRoom()\" class=\"text-danger\">\r\n      Leave\r\n    </button>\r\n  </div>\r\n</div>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { take } from 'rxjs/operators';\r\nimport { Room, RoomService } from '../../service/room.service';\r\n\r\nexport enum ActionType {\r\n  Update,\r\n  Create,\r\n}\r\n\r\nexport interface UpsertDialogData {\r\n  type: ActionType;\r\n  room?: Room;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-upsert-room-dialog',\r\n  templateUrl: './upsert-room-dialog.component.html',\r\n  styleUrls: ['./upsert-room-dialog.component.scss'],\r\n})\r\nexport class UpsertRoomDialogComponent {\r\n  type: ActionType;\r\n  upsertForm = this.formBuilder.group({\r\n    title: '',\r\n    isPublic: false,\r\n  });\r\n\r\n  room: Room;\r\n\r\n  ActionType = ActionType;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) data: UpsertDialogData,\r\n    private roomService: RoomService,\r\n    private formBuilder: FormBuilder,\r\n    private dialogRef: MatDialogRef<UpsertRoomDialogComponent>,\r\n  ) {\r\n    this.type = data.type;\r\n    this.room = data.room;\r\n\r\n    this.upsertForm.patchValue({\r\n      ...this.room,\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    const roomInput = this.upsertForm.value;\r\n\r\n    let request = this.roomService.createRoom(roomInput);\r\n\r\n    if (this.type === ActionType.Update) {\r\n      request = this.roomService.updateRoom(this.room._id, roomInput);\r\n    }\r\n\r\n    request.pipe(take(1)).subscribe(room =>\r\n      this.dialogRef.close({\r\n        ...room,\r\n        title: roomInput.title,\r\n        isPublic: roomInput.isPublic,\r\n      }),\r\n    );\r\n  }\r\n}\r\n","<div>\r\n  <h3 *ngIf=\"type === ActionType.Create\">Create Room</h3>\r\n  <form [formGroup]=\"upsertForm\" (ngSubmit)=\"submit()\">\r\n    <mat-form-field class=\"full-width\">\r\n      <mat-label>Title</mat-label>\r\n      <input\r\n        type=\"text\"\r\n        formControlName=\"title\"\r\n        placeholder=\"Type a room title\"\r\n        matInput\r\n      />\r\n    </mat-form-field>\r\n    <mat-slide-toggle\r\n      class=\"d-block mb-3\"\r\n      color=\"primary\"\r\n      formControlName=\"isPublic\"\r\n    >\r\n      Public\r\n    </mat-slide-toggle>\r\n    <button mat-raised-button>\r\n      {{ type === ActionType.Create ? 'Create' : 'Update' }}\r\n    </button>\r\n  </form>\r\n</div>\r\n\r\n<ng-template #update>\r\n  <h3>Update Room {{ room.title }}</h3>\r\n</ng-template>\r\n","import { ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { remove } from 'lodash';\r\nimport { interval, Subject } from 'rxjs';\r\nimport {\r\n  catchError,\r\n  filter,\r\n  mergeMap,\r\n  take,\r\n  takeUntil,\r\n  tap,\r\n} from 'rxjs/operators';\r\nimport { MainSocket } from '../../../../core/socket/main-socket';\r\nimport { AuthService, User } from '../../../auth/service/auth.service';\r\nimport { MessageType } from '../../../messages/components/messages/messages.component';\r\nimport { Message } from '../../../messages/service/message.service';\r\nimport { Room, RoomService } from '../../service/room.service';\r\n\r\ninterface InternalRoom extends Room {\r\n  members: User[];\r\n}\r\n\r\n@Component({\r\n  templateUrl: './room-page.component.html',\r\n  styleUrls: ['./room-page.component.scss'],\r\n})\r\nexport class RoomPageComponent implements OnInit, OnDestroy {\r\n  roomId: string;\r\n  room: InternalRoom;\r\n  destroy$ = new Subject();\r\n  MessageType = MessageType;\r\n  areMembersShown = false;\r\n  messages: Message[] = [];\r\n  updateMessages$ = new Subject();\r\n  user: User;\r\n  showTotalMembers = true;\r\n\r\n  constructor(\r\n    private roomService: RoomService,\r\n    private route: ActivatedRoute,\r\n    private socket: MainSocket,\r\n    private router: Router,\r\n    private authService: AuthService,\r\n    private changeDetector: ChangeDetectorRef,\r\n  ) {}\r\n\r\n  get onlineMembers() {\r\n    return this.room.members.filter(user => user.online);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Subscribe to room events\r\n    this.route.params\r\n      .pipe(\r\n        takeUntil(this.destroy$),\r\n        mergeMap(params => {\r\n          this.roomId = params.id;\r\n\r\n          return this.roomService.joinRoom(this.roomId).pipe(take(1));\r\n        }),\r\n        catchError(() => this.router.navigate(['/rooms'])),\r\n        filter<InternalRoom>(room => typeof room !== 'boolean'),\r\n        mergeMap(room => {\r\n          this.room = room;\r\n\r\n          this.changeDetector.detectChanges();\r\n\r\n          return this.socket.onConnect();\r\n        }),\r\n        tap(() => {\r\n          this.roomService.subscribeRoom(this.room);\r\n\r\n          this.updateMessages$.next();\r\n        }),\r\n        takeUntil(this.destroy$),\r\n      )\r\n      .subscribe();\r\n\r\n    interval(5000)\r\n      .pipe(\r\n        takeUntil(this.destroy$),\r\n        filter(() => this.room != null),\r\n        mergeMap(() => this.roomService.getRoom(this.roomId).pipe(take(1))),\r\n        tap<InternalRoom>(\r\n          room => (this.room = room),\r\n          () => this.router.navigate(['/rooms']),\r\n        ),\r\n      )\r\n      .subscribe();\r\n\r\n    this.roomService\r\n      .onJoinEvent()\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(user => {\r\n        this.room.members.push(user);\r\n\r\n        this.room = this.roomService.getRoomWithSortedMembers(\r\n          this.room,\r\n        ) as InternalRoom;\r\n      });\r\n\r\n    this.roomService\r\n      .onLeaveEvent()\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(user => {\r\n        if (user._id === this.user._id) {\r\n          this.router.navigate(['/rooms']);\r\n\r\n          return;\r\n        }\r\n\r\n        remove(this.room.members, u => u === user || u._id === user._id);\r\n      });\r\n\r\n    this.roomService\r\n      .onUpdateEvent()\r\n      .pipe(takeUntil<InternalRoom>(this.destroy$))\r\n      .subscribe(room => (this.room = room));\r\n\r\n    this.roomService\r\n      .onDeleteEvent()\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(() => this.router.navigate(['/rooms']));\r\n\r\n    this.authService.user$\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(user => (this.user = user));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n}\r\n","<div *ngIf=\"room\" class=\"d-flex flex-grow-1\">\r\n  <div\r\n    class=\"members bg-white d-flex flex-column position-relative flex-grow-1\"\r\n    [ngClass]=\"{ hide: !areMembersShown }\"\r\n  >\r\n    <div\r\n      class=\"top-header d-flex align-items-center overflow-hidden\"\r\n      role=\"button\"\r\n      (click)=\"showTotalMembers = !showTotalMembers\"\r\n    >\r\n      <span class=\"m-0 px-4 text-nowrap\"\r\n        >{{ showTotalMembers ? 'All' : 'Online' }} members ({{\r\n          (showTotalMembers ? room.members : onlineMembers).length\r\n        }})</span\r\n      >\r\n    </div>\r\n    <div class=\"position-relative d-flex flex-grow-1\">\r\n      <div class=\"position-absolute scroll w-100\">\r\n        <a\r\n          matRipple\r\n          *ngFor=\"let member of showTotalMembers ? room.members : onlineMembers\"\r\n          class=\"\r\n            w-100\r\n            px-4\r\n            py-3\r\n            d-flex\r\n            align-items-center\r\n            justify-content-between\r\n          \"\r\n          [routerLink]=\"['/direct-message', member.username]\"\r\n        >\r\n          <span>{{ member.username }}</span>\r\n          <div\r\n            class=\"circle\"\r\n            [ngClass]=\"member.online ? 'online' : 'offline'\"\r\n          ></div>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"d-flex flex-column w-100\">\r\n    <mat-toolbar class=\"toolbar\" color=\"primary\">\r\n      <button\r\n        mat-icon-button\r\n        class=\"me-2\"\r\n        aria-label=\"Members menu\"\r\n        (click)=\"areMembersShown = !areMembersShown\"\r\n      >\r\n        <mat-icon>menu</mat-icon>\r\n      </button>\r\n      <span>{{ room.title }}</span>\r\n      <span class=\"spacer\"></span>\r\n      <a mat-button routerLink=\"/rooms\">\r\n        <mat-icon class=\"text-white\">logout</mat-icon>\r\n      </a>\r\n    </mat-toolbar>\r\n    <app-messages\r\n      [type]=\"MessageType.Room\"\r\n      [room]=\"room\"\r\n      [messages]=\"messages\"\r\n      [updateMessages$]=\"updateMessages$\"\r\n    ></app-messages>\r\n  </div>\r\n</div>\r\n","import { Clipboard } from '@angular/cdk/clipboard';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { remove } from 'lodash';\r\nimport { forkJoin, Subject } from 'rxjs';\r\nimport { take, takeUntil, tap } from 'rxjs/operators';\r\nimport { ConfirmDialogComponent } from '../../../../shared/components/confirm-dialog/confirm-dialog.component';\r\nimport { updateItem } from '../../../../shared/utils/upsert-item';\r\nimport { AuthService, User } from '../../../auth/service/auth.service';\r\nimport { JoinRoomDialogComponent } from '../../components/join-room-dialog/join-room-dialog.component';\r\nimport {\r\n  ActionType,\r\n  UpsertRoomDialogComponent,\r\n} from '../../components/upsert-room-dialog/upsert-room-dialog.component';\r\nimport { Room, RoomService } from '../../service/room.service';\r\n\r\n@Component({\r\n  templateUrl: './rooms-page.component.html',\r\n  styleUrls: ['./rooms-page.component.scss'],\r\n})\r\nexport class RoomsPageComponent implements OnInit, OnDestroy {\r\n  publicRooms: Room[] = [];\r\n  userRooms: Room[] = [];\r\n  memberRooms: Room[] = [];\r\n  user: User;\r\n\r\n  loading = false;\r\n\r\n  destroy$ = new Subject();\r\n\r\n  constructor(\r\n    private roomService: RoomService,\r\n    private dialog: MatDialog,\r\n    private authService: AuthService,\r\n    private clipboard: Clipboard,\r\n    private router: Router,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.loading = true;\r\n\r\n    const process = () => (this.loading = false);\r\n\r\n    forkJoin({\r\n      userRooms: this.roomService.getUserRooms().pipe(take(1)),\r\n      publicRooms: this.roomService.getPublicRooms().pipe(take(1)),\r\n      memberRooms: this.roomService.getRoomsByMember().pipe(take(1)),\r\n    })\r\n      .pipe(tap(process, process))\r\n      .subscribe(({ userRooms, publicRooms, memberRooms }) => {\r\n        this.publicRooms = publicRooms;\r\n        this.userRooms = userRooms;\r\n        this.memberRooms = memberRooms;\r\n      });\r\n\r\n    this.authService.user$\r\n      .pipe(takeUntil(this.destroy$))\r\n      .subscribe(user => (this.user = user));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next();\r\n    this.destroy$.complete();\r\n  }\r\n\r\n  openCreateDialog() {\r\n    const dialog = this.dialog.open(UpsertRoomDialogComponent, {\r\n      data: {\r\n        type: ActionType.Create,\r\n      },\r\n    });\r\n\r\n    dialog\r\n      .afterClosed()\r\n      .pipe(take(1))\r\n      .subscribe((room: Room) => {\r\n        if (room.isPublic) {\r\n          this.publicRooms.push(room);\r\n        }\r\n\r\n        this.userRooms.push(room);\r\n      });\r\n  }\r\n\r\n  openJoinRoomDialog() {\r\n    this.dialog.open(JoinRoomDialogComponent);\r\n  }\r\n}\r\n","<mat-spinner\r\n  class=\"position-absolute\"\r\n  diameter=\"30\"\r\n  *ngIf=\"loading\"\r\n></mat-spinner>\r\n<div class=\"container mt-5\">\r\n  <mat-card>\r\n    <h2 mat-card-title>Rooms</h2>\r\n\r\n    <button mat-button (click)=\"openCreateDialog()\">Create Room</button>\r\n    <button mat-button (click)=\"openJoinRoomDialog()\">Join Room</button>\r\n    <a mat-button routerLink=\"/\">Back</a>\r\n  </mat-card>\r\n\r\n  <mat-list>\r\n    <h3 matSubheader>Your Rooms</h3>\r\n    <div *ngFor=\"let room of userRooms\">\r\n      <app-room-item\r\n        [memberRooms]=\"memberRooms\"\r\n        [userRooms]=\"userRooms\"\r\n        [publicRooms]=\"publicRooms\"\r\n        [room]=\"room\"\r\n        [user]=\"user\"\r\n      ></app-room-item>\r\n\r\n      <mat-divider></mat-divider>\r\n    </div>\r\n  </mat-list>\r\n\r\n  <mat-list>\r\n    <h3 matSubheader>Joined Rooms</h3>\r\n    <div *ngFor=\"let room of memberRooms\">\r\n      <app-room-item\r\n        [memberRooms]=\"memberRooms\"\r\n        [userRooms]=\"userRooms\"\r\n        [publicRooms]=\"publicRooms\"\r\n        [room]=\"room\"\r\n        [user]=\"user\"\r\n      ></app-room-item>\r\n\r\n      <mat-divider></mat-divider>\r\n    </div>\r\n  </mat-list>\r\n\r\n  <mat-list>\r\n    <h3 matSubheader>Public Rooms</h3>\r\n    <div *ngFor=\"let room of publicRooms\">\r\n      <app-room-item\r\n        [memberRooms]=\"memberRooms\"\r\n        [userRooms]=\"userRooms\"\r\n        [publicRooms]=\"publicRooms\"\r\n        [room]=\"room\"\r\n        [user]=\"user\"\r\n      ></app-room-item>\r\n\r\n      <mat-divider></mat-divider>\r\n    </div>\r\n  </mat-list>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RoomsPageComponent } from './pages/rooms-page/rooms-page.component';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { RoomService } from './service/room.service';\r\nimport { UpsertRoomDialogComponent } from './components/upsert-room-dialog/upsert-room-dialog.component';\r\nimport { JoinRoomDialogComponent } from './components/join-room-dialog/join-room-dialog.component';\r\nimport { RoomPageComponent } from './pages/room-page/room-page.component';\r\nimport { MessagesModule } from '../messages/messages.module';\r\nimport { RoomItemComponent } from './components/room-item/room-item.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RoomsPageComponent,\r\n    UpsertRoomDialogComponent,\r\n    JoinRoomDialogComponent,\r\n    RoomPageComponent,\r\n    RoomItemComponent,\r\n  ],\r\n  imports: [CommonModule, SharedModule, MessagesModule],\r\n  providers: [RoomService],\r\n  exports: [RoomsPageComponent, RoomPageComponent],\r\n})\r\nexport class RoomModule {}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { MainSocket } from '../../../core/socket/main-socket';\r\nimport { User } from '../../auth/service/auth.service';\r\n\r\nconst { api } = environment;\r\n\r\nexport interface Room {\r\n  _id: string;\r\n  title: string;\r\n  isPublic: boolean;\r\n  members: User[] | string[];\r\n  owner: User | string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RoomService {\r\n  constructor(private socket: MainSocket, private http: HttpClient) {}\r\n\r\n  getRoom(roomId: string) {\r\n    return this.http\r\n      .get<Room>(`${api}/room/id/${roomId}`)\r\n      .pipe(map(this.getRoomWithSortedMembers));\r\n  }\r\n\r\n  getPublicRooms() {\r\n    return this.http.get<Room[]>(`${api}/room/public`);\r\n  }\r\n\r\n  getRoomsByMember() {\r\n    return this.http.get<Room[]>(`${api}/room/member`);\r\n  }\r\n\r\n  getUserRooms() {\r\n    return this.http.get<Room[]>(`${api}/room`);\r\n  }\r\n\r\n  createRoom(room: Partial<Room>) {\r\n    return this.http.post<Room>(`${api}/room`, room);\r\n  }\r\n\r\n  deleteRoom(room: Room) {\r\n    return this.http.delete(`${api}/room/delete/${room._id}`);\r\n  }\r\n\r\n  updateRoom(id: string, room: Room) {\r\n    return this.http.put<Room>(`${api}/room/${id}`, room);\r\n  }\r\n\r\n  joinRoom(roomId: string) {\r\n    return this.http\r\n      .post<Room>(`${api}/room/join`, { roomId })\r\n      .pipe(map(this.getRoomWithSortedMembers));\r\n  }\r\n\r\n  leaveRoom(roomId: string) {\r\n    return this.http.delete<Room>(`${api}/room/leave/${roomId}`);\r\n  }\r\n\r\n  subscribeRoom(room: Room) {\r\n    this.socket.emit('room:subscribe', room._id);\r\n  }\r\n\r\n  onLeaveEvent() {\r\n    return this.socket.fromEvent<User>('room:leave');\r\n  }\r\n\r\n  onJoinEvent() {\r\n    return this.socket.fromEvent<User>('room:join');\r\n  }\r\n\r\n  onUpdateEvent() {\r\n    return this.socket\r\n      .fromEvent<Room>('room:update')\r\n      .pipe(map(this.getRoomWithSortedMembers));\r\n  }\r\n\r\n  onDeleteEvent() {\r\n    return this.socket.fromEvent<Room>('room:delete');\r\n  }\r\n\r\n  getRoomWithSortedMembers(room: Room) {\r\n    room.members = room.members.sort((a: any, b: any) =>\r\n      a.online === b.online ? 0 : a.online ? -1 : b.online ? 1 : 0,\r\n    );\r\n\r\n    return room;\r\n  }\r\n}\r\n","import { Routes } from '@angular/router';\r\nimport { LoginPageComponent } from './auth/pages/login-page/login-page.component';\r\nimport { MainComponent } from './main/main.component';\r\nimport { RegisterPageComponent } from './auth/pages/register-page/register-page.component';\r\nimport { AuthGuard } from './auth/guard/auth.guard';\r\nimport { SettingsPageComponent } from './user/pages/settings-page/settings-page.component';\r\nimport { RecoverChangePasswordPageComponent } from './user/pages/recover-change-password-page/recover-change-password-page.component';\r\nimport { RoomsPageComponent } from './room/pages/rooms-page/rooms-page.component';\r\nimport { RoomPageComponent } from './room/pages/room-page/room-page.component';\r\nimport { RecoverPageComponent } from './user/pages/recover-page/recover-page.component';\r\nimport { DirectMessagePageComponent } from './messages/pages/direct-message-page/direct-message-page.component';\r\n\r\nexport const routes: Routes = [\r\n  { path: '', component: MainComponent },\r\n  {\r\n    path: 'login',\r\n    component: LoginPageComponent,\r\n    canActivate: [AuthGuard],\r\n    data: {\r\n      requireAuth: false,\r\n    },\r\n  },\r\n  {\r\n    path: 'register',\r\n    component: RegisterPageComponent,\r\n    canActivate: [AuthGuard],\r\n    data: {\r\n      requireAuth: false,\r\n    },\r\n  },\r\n  {\r\n    path: 'recover',\r\n    pathMatch: 'full',\r\n    component: RecoverPageComponent,\r\n    canActivate: [AuthGuard],\r\n    data: {\r\n      requireAuth: false,\r\n    },\r\n  },\r\n  {\r\n    path: 'recover/:code',\r\n    pathMatch: 'full',\r\n    component: RecoverChangePasswordPageComponent,\r\n    canActivate: [AuthGuard],\r\n    data: {\r\n      requireAuth: false,\r\n    },\r\n  },\r\n  {\r\n    path: 'settings',\r\n    component: SettingsPageComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'rooms',\r\n    component: RoomsPageComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'room/:id',\r\n    component: RoomPageComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'direct-message/:username',\r\n    component: DirectMessagePageComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  { path: '**', redirectTo: '/' },\r\n];\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport Swal from 'sweetalert2';\r\nimport { mergeMap, take } from 'rxjs/operators';\r\nimport { RecoverService } from '../../service/recover.service';\r\n\r\n@Component({\r\n  templateUrl: './recover-change-password-page.component.html',\r\n  styleUrls: ['./recover-change-password-page.component.scss'],\r\n})\r\nexport class RecoverChangePasswordPageComponent implements OnInit, OnDestroy {\r\n  changePasswordForm = this.formBuilder.group({\r\n    password: '',\r\n    confirmPassword: '',\r\n  });\r\n\r\n  code: string;\r\n\r\n  paramsSubscription: Subscription;\r\n\r\n  loading = true;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private recoverService: RecoverService,\r\n    private activatedRoute: ActivatedRoute,\r\n    private router: Router,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.paramsSubscription = this.activatedRoute.params\r\n      .pipe(\r\n        mergeMap(({ code }) => {\r\n          this.code = code;\r\n\r\n          return this.recoverService.validateCode(this.code).pipe(take(1));\r\n        }),\r\n      )\r\n      .subscribe(\r\n        () => (this.loading = false),\r\n        () => this.router.navigate(['/']),\r\n      );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.paramsSubscription.unsubscribe();\r\n  }\r\n\r\n  submit() {\r\n    if (this.loading) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n\r\n    const clear = () => {\r\n      this.loading = false;\r\n\r\n      this.changePasswordForm.patchValue({\r\n        password: '',\r\n        confirmPassword: '',\r\n      });\r\n    };\r\n\r\n    this.recoverService\r\n      .changePassword(this.code, this.changePasswordForm.value)\r\n      .pipe(take(1))\r\n      .subscribe(() => {\r\n        this.loading = false;\r\n\r\n        Swal.fire({\r\n          title: 'Good job!',\r\n          text: 'Your password was sucessfully updated!',\r\n          icon: 'success',\r\n        });\r\n\r\n        this.router.navigate(['/login']);\r\n      }, clear);\r\n  }\r\n}\r\n","<mat-spinner\r\n  class=\"position-absolute\"\r\n  diameter=\"30\"\r\n  *ngIf=\"loading\"\r\n></mat-spinner>\r\n<div class=\"container\">\r\n  <mat-card>\r\n    <h2 mat-card-title>Change your password</h2>\r\n    <p mat-card-subtitle>Change your password by completing the form</p>\r\n\r\n    <form [formGroup]=\"changePasswordForm\" (ngSubmit)=\"submit()\">\r\n      <mat-form-field class=\"full-width\">\r\n        <mat-label>Password</mat-label>\r\n        <input\r\n          type=\"password\"\r\n          formControlName=\"password\"\r\n          placeholder=\"Type in your new password\"\r\n          matInput\r\n        />\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"full-width\">\r\n        <mat-label>Confirm Password</mat-label>\r\n        <input\r\n          type=\"password\"\r\n          formControlName=\"confirmPassword\"\r\n          placeholder=\"Confirm your new password\"\r\n          matInput\r\n        />\r\n      </mat-form-field>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <a routerLink=\"/\" mat-button mat-raised-button>Back</a>\r\n        <button mat-button mat-raised-button color=\"primary\">\r\n          Change password\r\n        </button>\r\n      </mat-card-actions>\r\n    </form>\r\n  </mat-card>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { take, tap } from 'rxjs/operators';\r\nimport Swal from 'sweetalert2';\r\nimport { RecoverService } from '../../service/recover.service';\r\n\r\n@Component({\r\n  templateUrl: './recover-page.component.html',\r\n  styleUrls: ['./recover-page.component.scss'],\r\n})\r\nexport class RecoverPageComponent {\r\n  recoverForm = this.formBuilder.group({\r\n    email: '',\r\n  });\r\n\r\n  loading = false;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private recoverService: RecoverService,\r\n  ) {}\r\n\r\n  submit() {\r\n    if (this.loading) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n\r\n    const clear = () => {\r\n      this.loading = false;\r\n\r\n      this.recoverForm.patchValue({ email: '' });\r\n    };\r\n\r\n    this.recoverService\r\n      .recoverPassword(this.recoverForm.value.email)\r\n      .pipe(tap(clear, clear), take(1))\r\n      .subscribe(() =>\r\n        Swal.fire({\r\n          title: 'Good job!',\r\n          text: 'Check your email (spamfolder) and change your password!',\r\n          icon: 'success',\r\n        }),\r\n      );\r\n  }\r\n}\r\n","<mat-spinner\r\n  class=\"position-absolute\"\r\n  diameter=\"30\"\r\n  *ngIf=\"loading\"\r\n></mat-spinner>\r\n\r\n<div class=\"container\">\r\n  <mat-card>\r\n    <h2 mat-card-title>Forgot my password</h2>\r\n    <p mat-card-subtitle>Recover your password</p>\r\n\r\n    <form [formGroup]=\"recoverForm\" (ngSubmit)=\"submit()\">\r\n      <mat-form-field class=\"full-width\">\r\n        <mat-label>Email</mat-label>\r\n        <input\r\n          type=\"email\"\r\n          formControlName=\"email\"\r\n          placeholder=\"Type in your email\"\r\n          matInput\r\n        />\r\n      </mat-form-field>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <a routerLink=\"/\" mat-button mat-raised-button>Back</a>\r\n        <button mat-button mat-raised-button color=\"primary\">Recover</button>\r\n      </mat-card-actions>\r\n    </form>\r\n  </mat-card>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { take } from 'rxjs/operators';\r\nimport { AuthService } from 'src/app/features/auth/service/auth.service';\r\nimport {\r\n  UpdatePasswordBody,\r\n  UserService,\r\n} from 'src/app/features/user/service/user.service';\r\nimport {\r\n  ConfirmDialogComponent,\r\n  ConfirmDialogData,\r\n} from 'src/app/shared/components/confirm-dialog/confirm-dialog.component';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  templateUrl: './settings-page.component.html',\r\n  styleUrls: ['./settings-page.component.scss'],\r\n})\r\nexport class SettingsPageComponent implements OnInit {\r\n  settingsForm = this.formBuilder.group({\r\n    username: '',\r\n    email: '',\r\n    currentPassword: null,\r\n    password: null,\r\n    confirmPassword: null,\r\n  });\r\n\r\n  loading = false;\r\n\r\n  get user() {\r\n    return this.authService.user;\r\n  }\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private userService: UserService,\r\n    private authService: AuthService,\r\n    private dialog: MatDialog,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    const { username, email } = this.authService.user;\r\n\r\n    this.settingsForm.patchValue({\r\n      username,\r\n      email,\r\n    });\r\n  }\r\n\r\n  updateUsername() {\r\n    const { username } = this.settingsForm.value;\r\n\r\n    if (this.loading || this.user.username === username) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n\r\n    this.userService\r\n      .updateUsername(username)\r\n      .pipe(take(1))\r\n      .subscribe(\r\n        () => {\r\n          this.authService.user$.next({\r\n            ...this.authService.user,\r\n            username,\r\n          });\r\n\r\n          this.loading = false;\r\n\r\n          Swal.fire({\r\n            title: 'Good job!',\r\n            text: 'Your username was sucessfully updated!',\r\n            icon: 'success',\r\n          });\r\n        },\r\n        () => (this.loading = false),\r\n      );\r\n  }\r\n\r\n  updateEmail() {\r\n    const { email } = this.settingsForm.value;\r\n\r\n    if (this.loading || this.user.email === email) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n\r\n    this.userService\r\n      .updateEmail(email)\r\n      .pipe(take(1))\r\n      .subscribe(\r\n        () => {\r\n          this.authService.user$.next({\r\n            ...this.authService.user,\r\n            email,\r\n          });\r\n\r\n          this.loading = false;\r\n\r\n          Swal.fire({\r\n            title: 'Good job!',\r\n            text: 'Your email was sucessfully updated!',\r\n            icon: 'success',\r\n          });\r\n        },\r\n        () => (this.loading = false),\r\n      );\r\n  }\r\n\r\n  updatePassword() {\r\n    if (this.loading) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n\r\n    const clear = () => {\r\n      this.loading = false;\r\n\r\n      this.settingsForm.patchValue({\r\n        currentPassword: null,\r\n        password: null,\r\n        confirmPassword: null,\r\n      });\r\n    };\r\n\r\n    const data: UpdatePasswordBody = this.settingsForm.value;\r\n\r\n    this.userService\r\n      .updatePassword(data)\r\n      .pipe(take(1))\r\n      .subscribe(async () => {\r\n        clear();\r\n\r\n        await Swal.fire({\r\n          title: 'Good job!',\r\n          text: 'Your password was sucessfully updated!',\r\n          icon: 'success',\r\n        });\r\n\r\n        this.openLogoutDialog();\r\n      }, clear);\r\n  }\r\n\r\n  private openLogoutDialog() {\r\n    const dialog = this.dialog.open<ConfirmDialogData>(ConfirmDialogComponent, {\r\n      data: {\r\n        title: 'Global logout',\r\n        description: 'Do you want to logout from all of your devices?',\r\n      },\r\n    });\r\n\r\n    dialog\r\n      .afterClosed()\r\n      .pipe(take(1))\r\n      .subscribe(confirm => {\r\n        if (confirm) {\r\n          this.logoutFromAllDevices();\r\n        }\r\n      });\r\n  }\r\n\r\n  private logoutFromAllDevices() {\r\n    this.authService\r\n      .logoutFromAllDevices()\r\n      .pipe(take(1))\r\n      .subscribe(() =>\r\n        Swal.fire({\r\n          title: 'Good job!',\r\n          text: 'All of your devices were successfully logged out!',\r\n          icon: 'success',\r\n        }),\r\n      );\r\n  }\r\n}\r\n","<mat-spinner\r\n  class=\"position-absolute\"\r\n  diameter=\"30\"\r\n  *ngIf=\"loading\"\r\n></mat-spinner>\r\n<div class=\"container\">\r\n  <mat-card>\r\n    <h2 mat-card-title>Settings</h2>\r\n    <p mat-card-subtitle>Update your account</p>\r\n\r\n    <form [formGroup]=\"settingsForm\" (ngSubmit)=\"updateUsername()\">\r\n      <h3>Username</h3>\r\n      <mat-form-field class=\"full-width mb-1\">\r\n        <mat-label>Username</mat-label>\r\n        <input\r\n          type=\"text\"\r\n          formControlName=\"username\"\r\n          placeholder=\"Type in your username\"\r\n          matInput\r\n        />\r\n      </mat-form-field>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <button mat-button mat-raised-button color=\"primary\">\r\n          Update username\r\n        </button>\r\n      </mat-card-actions>\r\n    </form>\r\n\r\n    <form [formGroup]=\"settingsForm\" (ngSubmit)=\"updateEmail()\">\r\n      <h3>Email</h3>\r\n      <mat-form-field class=\"full-width mb-1\">\r\n        <mat-label>Email</mat-label>\r\n        <input\r\n          type=\"email\"\r\n          formControlName=\"email\"\r\n          placeholder=\"Type in your email\"\r\n          matInput\r\n        />\r\n      </mat-form-field>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <button mat-button mat-raised-button color=\"primary\">\r\n          Update email\r\n        </button>\r\n      </mat-card-actions>\r\n    </form>\r\n\r\n    <form [formGroup]=\"settingsForm\" (ngSubmit)=\"updatePassword()\">\r\n      <h3>Password</h3>\r\n      <mat-form-field class=\"full-width\" *ngIf=\"!user.isSocial\">\r\n        <mat-label>Current Password</mat-label>\r\n        <input\r\n          type=\"password\"\r\n          formControlName=\"currentPassword\"\r\n          placeholder=\"Type in your current password\"\r\n          matInput\r\n        />\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"full-width\">\r\n        <mat-label>New Password</mat-label>\r\n        <input\r\n          type=\"password\"\r\n          formControlName=\"password\"\r\n          placeholder=\"Type in your new password\"\r\n          matInput\r\n        />\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"full-width mb-1\">\r\n        <mat-label>Confirm Password</mat-label>\r\n        <input\r\n          type=\"password\"\r\n          formControlName=\"confirmPassword\"\r\n          placeholder=\"Confirm your new password\"\r\n          matInput\r\n        />\r\n      </mat-form-field>\r\n\r\n      <mat-card-actions align=\"end\">\r\n        <a routerLink=\"/\" mat-button mat-raised-button>Back</a>\r\n        <button mat-button mat-raised-button color=\"primary\">\r\n          Update password\r\n        </button>\r\n      </mat-card-actions>\r\n    </form>\r\n  </mat-card>\r\n</div>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '../../../../environments/environment';\r\n\r\nconst { api } = environment;\r\n\r\nexport interface ChangePasswordBody {\r\n  password: string;\r\n  confirmPassword: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RecoverService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  recoverPassword(email: string) {\r\n    return this.http.post(`${api}/recover`, { email });\r\n  }\r\n\r\n  validateCode(code: string) {\r\n    return this.http.get(`${api}/recover/${code}`);\r\n  }\r\n\r\n  changePassword(code: string, body: ChangePasswordBody) {\r\n    return this.http.post(`${api}/recover/${code}`, body);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { of } from 'rxjs';\r\nimport { mergeMap, take } from 'rxjs/operators';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { ErrorDialogInterceptor } from '../../../core/interceptor/error-dialog.interceptor';\r\nimport { AuthTokenInterceptor } from '../../auth/interceptor/auth-token.interceptor';\r\nimport { NotificationService } from '../../notification/service/notification.service';\r\n\r\nconst { api } = environment;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SubscriptionService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private notificationService: NotificationService,\r\n  ) {}\r\n\r\n  requestSubscription() {\r\n    return this.notificationService\r\n      .requestSubscription()\r\n      .pipe(mergeMap(subscription => this.registerSubscription(subscription)));\r\n  }\r\n\r\n  registerSubscription(subscription: PushSubscription) {\r\n    return this.http.post(`${api}/subscription/web`, {\r\n      subscription,\r\n    });\r\n  }\r\n\r\n  delete() {\r\n    const subscription = this.notificationService.getSubscription();\r\n\r\n    if (!subscription) {\r\n      return of();\r\n    }\r\n\r\n    return this.http.delete(`${api}/subscription/web`, {\r\n      body: {\r\n        subscription,\r\n      },\r\n      headers: {\r\n        [AuthTokenInterceptor.skipHeader]: 'true',\r\n        [ErrorDialogInterceptor.skipHeader]: 'true',\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { User } from '../../auth/service/auth.service';\r\n\r\nconst { api } = environment;\r\n\r\nexport interface UpdatePasswordBody {\r\n  currentPassword?: string;\r\n  password?: string;\r\n  confirmPassword?: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getUser(username: string) {\r\n    return this.http.get<User>(`${api}/user/${username}`);\r\n  }\r\n\r\n  updateUsername(username: string) {\r\n    return this.http.put(`${api}/settings/username`, { username });\r\n  }\r\n\r\n  updateEmail(email: string) {\r\n    return this.http.put(`${api}/settings/email`, { email });\r\n  }\r\n\r\n  updatePassword(data: UpdatePasswordBody) {\r\n    return this.http.put(`${api}/settings/password`, data);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SettingsPageComponent } from './pages/settings-page/settings-page.component';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { RecoverPageComponent } from './pages/recover-page/recover-page.component';\r\nimport { RecoverChangePasswordPageComponent } from './pages/recover-change-password-page/recover-change-password-page.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SettingsPageComponent,\r\n    RecoverPageComponent,\r\n    RecoverChangePasswordPageComponent,\r\n  ],\r\n  imports: [CommonModule, SharedModule],\r\n  exports: [\r\n    SettingsPageComponent,\r\n    RecoverPageComponent,\r\n    RecoverChangePasswordPageComponent,\r\n  ],\r\n})\r\nexport class UserModule {}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\nexport interface ConfirmDialogData {\r\n  title: string;\r\n  description: string | string[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-confirm-dialog',\r\n  templateUrl: './confirm-dialog.component.html',\r\n  styleUrls: ['./confirm-dialog.component.scss'],\r\n})\r\nexport class ConfirmDialogComponent implements OnInit {\r\n  title: ConfirmDialogData['title'];\r\n  description: ConfirmDialogData['description'];\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) data: ConfirmDialogData,\r\n    private dialogRef: MatDialogRef<ConfirmDialogComponent>,\r\n  ) {\r\n    this.title = data?.title || 'Are you sure?';\r\n    this.description =\r\n      data?.description || 'You are not going to be able to undo this action';\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  accept(): void {\r\n    this.dialogRef.close(true);\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close(false);\r\n  }\r\n}\r\n","<h2 mat-dialog-title>{{ title }}</h2>\r\n<mat-dialog-content class=\"mat-typography\">\r\n  {{ description }}\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-button (click)=\"close()\">Close</button>\r\n  <button mat-button (click)=\"accept()\">Accept</button>\r\n</mat-dialog-actions>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\nexport interface ErrorDialogData {\r\n  title: string;\r\n  message: string | string[];\r\n}\r\n\r\n@Component({\r\n  templateUrl: './error-dialog.component.html',\r\n  styleUrls: ['./error-dialog.component.scss'],\r\n})\r\nexport class ErrorDialogComponent implements OnInit {\r\n  title: ErrorDialogData['title'];\r\n  message: ErrorDialogData['message'];\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) data: ErrorDialogData) {\r\n    this.title = data.title || 'Error';\r\n    this.message =\r\n      data.message instanceof Array ? data.message : [data.message || ''];\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<h2 mat-dialog-title>{{ title }}</h2>\r\n<mat-dialog-content class=\"mat-typography\">\r\n  <p *ngIf=\"message.length === 1; else multiple\">{{ message[0] }}</p>\r\n\r\n  <ng-template #multiple>\r\n    <ul>\r\n      <li *ngFor=\"let msg of message\">\r\n        {{ msg }}\r\n      </li>\r\n    </ul>\r\n  </ng-template>\r\n</mat-dialog-content>\r\n<mat-dialog-actions align=\"end\">\r\n  <button mat-button mat-dialog-close>Close</button>\r\n</mat-dialog-actions>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n// Angular modules\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { ClipboardModule } from '@angular/cdk/clipboard';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatRippleModule } from '@angular/material/core';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [CommonModule],\r\n  exports: [\r\n    MatInputModule,\r\n    BrowserAnimationsModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatGridListModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatListModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    MatFormFieldModule,\r\n    MatSlideToggleModule,\r\n    ClipboardModule,\r\n    MatToolbarModule,\r\n    MatRippleModule,\r\n  ],\r\n})\r\nexport class MaterialModule {}\r\n","import { Injectable } from '@angular/core';\r\n\r\nexport enum Sound {\r\n  Message = 'message-tone',\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SoundService {\r\n  constructor() {}\r\n\r\n  playSound(sound: Sound) {\r\n    const path = `assets/tones/${sound}.mp3`;\r\n\r\n    if (sound) {\r\n      const audio = new Audio(path);\r\n      audio.muted = false;\r\n      audio.play();\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ConfirmDialogComponent } from './components/confirm-dialog/confirm-dialog.component';\r\nimport { ErrorDialogComponent } from './components/error-dialog/error-dialog.component';\r\nimport { MaterialModule } from './material/material.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\n@NgModule({\r\n  declarations: [ConfirmDialogComponent, ErrorDialogComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n  ],\r\n  exports: [\r\n    ConfirmDialogComponent,\r\n    ErrorDialogComponent,\r\n    MaterialModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    RouterModule,\r\n    HttpClientModule,\r\n  ],\r\n})\r\nexport class SharedModule {}\r\n","export const updateItem = <T>(\r\n  arr: T[],\r\n  predicate: (item: T) => boolean,\r\n  object: Partial<T>,\r\n) => {\r\n  const item = arr.find(predicate);\r\n\r\n  if (!item) {\r\n    return;\r\n  }\r\n\r\n  Object.assign(item, object);\r\n};\r\n","// export const environment = {\r\n//   production: false,\r\n//   api: 'https://riksmote.herokuapp.com',\r\n//   socket: 'https://riksmote.herokuapp.com',\r\n//   apps: {\r\n//     facebook: '676046816978387',\r\n//     google: '847417968911-lim6ak6h6g0p49g2ml6odu3j7a3eeb1h.apps.googleusercontent.com',\r\n//     apple: {\r\n//       clientId: '!nest-auth.ubbly.club',\r\n//       redirectUri: '!https://nest-auth.ubbly.club/',\r\n//     },\r\n//   },\r\n// };\r\n\r\nexport const environment = {\r\n  production: false,\r\n  api: 'http://localhost:3000',\r\n  socket: 'http://localhost:3000',\r\n  apps: {\r\n    facebook: '676046816978387',\r\n    google: '847417968911-lim6ak6h6g0p49g2ml6odu3j7a3eeb1h.apps.googleusercontent.com',\r\n    apple: {\r\n      clientId: 'nest-auth.ubbly.club',\r\n      redirectUri: 'https://nest-auth.ubbly.club/',\r\n    },\r\n  },\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}